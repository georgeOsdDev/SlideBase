// Generated by CoffeeScript 1.3.3

/*
slideBaseClient-plugin-gaya.js
------------------------------------------------
author:  [Takeharu Oshida](http://about.me/takeharu.oshida)
version: 0.1
licence: [MIT](http://opensource.org/licenses/mit-license.php)
*/


(function() {
  var gaya;

  gaya = new sbClient.Model.Plugin({
    name: "gaya",
    element: "<div id='#gaya' class='pluginOption'>\n  <span>Comment</span><br>\n  <input type='text' name='gaya'></input>\n  <input class='btn' name='submitGaya' type='button' value='gaya'/><br>\n  <label class='radio'>\n    <input type=\"radio\" name='gayaStyle' id='gayaStyle1' value='niconico' checked> niconico\n  </label>\n  <label class='radio'>\n    <input type='radio' name='gayaStyle' id='gayaStyle2' value='growl'> growl\n  </label>\n</div>",
    initialScript: function() {
      var self;
      console.log("gaya plugin is ready");
      sbClient.gayaList = {};
      self = this;
      return $('[name="submitGaya"]').click(function() {
        var func;
        gaya = $('[name="gaya"]').val();
        if (gaya.length < 1) {
          return;
        }
        sbClient.execEmit('gaya', gaya);
        func = sbClient.plugins['gaya'].get('callback');
        func(gaya);
        return false;
      });
    },
    callback: function(gaya) {
      var color, css, div, growlView, hex, niconicoView, saveGaya, style;
      style = $('[name="gayaStyle"]:checked').val();
      hex = '0123456789ABCDEF'.split('');
      color = function() {
        var ret;
        ret = ['#', hex[Math.floor(Math.random() * hex.length)], hex[Math.floor(Math.random() * hex.length)], hex[Math.floor(Math.random() * hex.length)], hex[Math.floor(Math.random() * hex.length)], hex[Math.floor(Math.random() * hex.length)], hex[Math.floor(Math.random() * hex.length)]];
        return ret.join('');
      };
      css = {};
      if (style === "niconico") {
        css = {
          'color': color(),
          'left': $(window).width(),
          'top': Math.floor(Math.random() * $(window).height() * 0.9),
          'position': 'absolute',
          'width': '100%'
        };
      }
      if (style === "growl") {
        css = {
          'color': 'white',
          'right': Math.floor(Math.random() * 40) + 40,
          'top': $(window).height() - (Math.floor(Math.random() * 50) + 50),
          'position': 'absolute',
          'text-align': 'right',
          'background-color': '#333',
          'opacity': 0.8,
          'border-radius': '3px'
        };
      }
      div = document.createElement("div");
      $(div).text(gaya).css(css).addClass('gayaMsg');
      niconicoView = function() {
        var intervalCallback, timeoutCallback;
        timeoutCallback = function() {
          return $(div).remove();
        };
        setTimeout(timeoutCallback, 7000);
        intervalCallback = function() {
          var offset;
          offset = $(div).offset();
          offset.left -= 20;
          return $(div).offset(offset);
        };
        return setInterval(intervalCallback, 75);
      };
      growlView = function() {
        var timeoutCallback;
        timeoutCallback = function() {
          return $(div).remove();
        };
        return setTimeout(timeoutCallback, 3000);
      };
      $('body').append(div);
      switch (style) {
        case "niconico":
          niconicoView();
          break;
        case "growl":
          growlView();
          break;
        default:
          return;
      }
      saveGaya = function(gaya) {
        var date, l0Pad, now;
        l0Pad = function(num) {
          if (num < 10) {
            return "0" + num;
          } else {
            return num;
          }
        };
        date = new Date();
        now = [date.getFullYear(), "-", l0Pad(date.getMonth() + 1), "-", l0Pad(date.getDate()), " ", l0Pad(date.getHours()), ":", l0Pad(date.getMinutes()), ":", l0Pad(date.getSeconds())].join("");
        return sbClient.gayaList.now = gaya;
      };
      return saveGaya();
    }
  });

}).call(this);
